apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ .Release.Name }}-migrate
          image: "arceng/studio:{{ .Values.image.tag }}"
          command: [ "python", "manage.py", "migrate" ]
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secret
          env:
            - name: SENTRY_DSN
              value: {{ .Values.sentry_dsn }}
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
      containers:
      - name: {{ .Release.Name }}
        image: "arceng/studio:{{ .Values.image.tag }}"
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /healthz/
            port: 8000
          initialDelaySeconds: 5  # Delay before the first probe
          periodSeconds: 10       # How often to perform the probe
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8000
          initialDelaySeconds: 15  # Delay before the first probe to allow for application startup
          periodSeconds: 20        # How often to perform the probe
        resources:
          limits:
            memory: "500Mi"
            cpu: "1"
          requests:
            memory: "200Mi"
            cpu: "0.2"
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: "studio.settings"
          - name: SENTRY_DSN
            value: {{ .Values.sentry_dsn }}
          - name: SESSION_COOKIE_DOMAIN
            value: {{ .Values.session.cookie_domain }}
          - name: SHARED_SESSIONS_ENABLED
            value: {{ .Values.shared_sessions_enabled | quote }}
          - name: ROOT_PATH
            value: {{ .Values.root_path }}
          - name: POSTGRES_HOST
            value: {{ .Release.Name }}-postgresql
          - name: POSTGRES_DB
            value: {{ .Values.postgresql.auth.database }}
          - name: POSTGRES_USER
            value: {{ .Values.postgresql.auth.username }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgresql
                key: password
        envFrom:
          - secretRef:
              name: {{ .Release.Name }}-secret
