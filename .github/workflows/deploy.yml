name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      # This step checks out the repository code so that the workflow can access it.

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
      # This step sets up the Python environment using the specified version from the matrix.

    - name: Install dependencies
      run: |
        set -e
        python -m pip install --upgrade pip
        pip install poetry==1.4.0
        poetry install
      # This step installs the necessary Python dependencies using Poetry.

    - name: Build Docker image
      run: |
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        set -e
        make docker
      # This step builds the Docker image, using the POSTGRES_PASSWORD secret for configuration.

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      # This step logs into Docker Hub using the provided credentials stored in secrets.

    - name: Push Docker image
      run: |
        set -e
        make docker-push
      # This step pushes the built Docker image to Docker Hub.

    - name: Set up K8s
      uses: azure/setup-kubectl@v1
      with:
        version: ${{ secrets.K8S_VERSION }}
      # This step sets up kubectl to interact with the Kubernetes cluster.

    - name: Create K8s secrets
      run: |
        set -e
        make create-k8s-secrets
      # This step creates the necessary Kubernetes secrets for deployment.

    - name: Deploy to Kubernetes
      run: |
        set -e
        make deploy
      # This step deploys the application to the Kubernetes cluster using the makefile command.
